name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

# Cancel in-progress runs for same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: "1.3"

      - name: Install dependencies
        run: bun install

      - name: Run Biome linter
        run: bun run check

  test-typescript:
    name: Test TypeScript Library
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: "1.3"

      - name: Install dependencies
        run: bun install

      - name: Type check
        run: bun run tsc

      - name: Run core tests
        run: bun run test:cadabra

      - name: Run integration tests
        run: bun run test:integration

      - name: Run benchmarks
        run: bun run bench
        continue-on-error: true

  test-php:
    name: Test PHP ${{ matrix.php }} / Symfony ${{ matrix.symfony }}
    runs-on: ubuntu-latest
    needs: lint

    strategy:
      fail-fast: false
      matrix:
        php: ['8.1', '8.2', '8.3', '8.4']
        symfony: ['6.0', '7.0']
        exclude:
          # Symfony 7 requires PHP 8.2+
          - php: '8.1'
            symfony: '7.0'

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: pdo, pdo_sqlite, sqlite3
          coverage: none
          tools: composer:v2

      - name: Get Composer cache directory
        id: composer-cache
        working-directory: packages/cadabra-php
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-php${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-php${{ matrix.php }}-
            ${{ runner.os }}-composer-

      - name: Install dependencies
        working-directory: packages/cadabra-php
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run PHP code style check
        working-directory: packages/cadabra-php
        run: composer cs:check

      - name: Run PHPUnit unit tests
        working-directory: packages/cadabra-php
        run: composer test:unit

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: "1.3"

      - name: Install Bun dependencies (for Cadabra server)
        working-directory: packages/cadabra
        run: bun install

      - name: Start Cadabra server
        working-directory: packages/cadabra
        run: |
          bun run server.ts &
          echo $! > cadabra.pid
          # Wait for server to be ready
          timeout 30 bash -c 'until curl -f http://localhost:6942/health; do sleep 1; done' || exit 1

      - name: Install Symfony test app dependencies
        working-directory: packages/cadabra-php/symfony-test-app
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run Symfony integration tests
        working-directory: packages/cadabra-php/symfony-test-app
        run: vendor/bin/phpunit --colors=always

      - name: Stop Cadabra server
        if: always()
        working-directory: packages/cadabra
        run: |
          if [ -f cadabra.pid ]; then
            kill $(cat cadabra.pid) || true
            rm cadabra.pid
          fi

  all-checks-passed:
    name: All Quality Checks Passed
    runs-on: ubuntu-latest
    needs: [lint, test-typescript, test-php]
    if: always()

    steps:
      - name: Check all jobs
        run: |
          if [ "${{ needs.lint.result }}" != "success" ] || \
             [ "${{ needs.test-typescript.result }}" != "success" ] || \
             [ "${{ needs.test-php.result }}" != "success" ]; then
            echo "❌ Some quality checks failed!"
            echo "Lint: ${{ needs.lint.result }}"
            echo "TypeScript Tests: ${{ needs.test-typescript.result }}"
            echo "PHP Tests: ${{ needs.test-php.result }}"
            exit 1
          fi
          echo "✅ All quality checks passed!"
