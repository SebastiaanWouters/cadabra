name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  # Run all quality checks once
  quality-checks:
    name: Quality Checks
    uses: ./.github/workflows/ci.yml

  # Create GitHub Release
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: quality-checks
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Extract changelog for this version
        id: changelog
        run: |
          VERSION=${{ steps.version.outputs.version }}

          # Extract changelog section for this version
          awk '/^## \['$VERSION'\]/, /^## \[/ {
            if (/^## \['$VERSION'\]/) {
              found=1; next
            }
            if (/^## \[/ && found) {
              exit
            }
            if (found) print
          }' CHANGELOG.md > /tmp/release-notes.md

          # If empty, use default message
          if [ ! -s /tmp/release-notes.md ]; then
            echo "Release version $VERSION" > /tmp/release-notes.md
            echo "" >> /tmp/release-notes.md
            echo "See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details." >> /tmp/release-notes.md
          fi

          cat /tmp/release-notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: Release ${{ steps.version.outputs.version }}
          body_path: /tmp/release-notes.md
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, '-') }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Summary
        run: |
          echo "âœ… GitHub Release created: ${{ steps.version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“¦ Publishing packages in parallel:" >> $GITHUB_STEP_SUMMARY
          echo "  - NPM (npm-publish workflow)" >> $GITHUB_STEP_SUMMARY
          echo "  - Docker (docker workflow)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "View release: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY

  # Publish to NPM (runs in parallel with docker after CI passes)
  publish-npm:
    name: Publish to NPM
    needs: quality-checks
    uses: ./.github/workflows/npm-publish.yml
    secrets: inherit

  # Build and push Docker image (runs in parallel with npm after CI passes)
  publish-docker:
    name: Build Docker Image
    needs: quality-checks
    uses: ./.github/workflows/docker.yml
    secrets: inherit
